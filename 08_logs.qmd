# Les logs {.backgroundTitre}

## Les logs

Pour compléter les différents outils de débogage, il reste un pratique essentielle à présenter qui est **l'écriture des logs**.  
Les logs permettent de tracer l'historique des actions, de suivre le cheminement logique du code R et ainsi de repérer l'origine des bugs/erreurs.  

Cette pratique est tellement répandue et utile qu'il existe de très nombreux packages R : 
[{logger}](https://cran.r-project.org/web/packages/logger/index.html), [{futile.logger}](https://cran.r-project.org/web/packages/futile.logger/index.html), [{logging}](https://cran.r-project.org/web/packages/logging/index.html), [{lgr}](https://cran.r-project.org/web/packages/lgr/index.html), [{loggit}](https://cran.r-project.org/web/packages/loggit/index.html),
[{log4r}](https://cran.r-project.org/web/packages/log4r/index.html) ...  
  

Dans cette présentation, nous allons utiliser le package [{logr}](https://logr.r-sassy.org/index.html).

## Pourquoi logr ?

Le package {logr} présente plusieurs avantages :  
  
- Il est très simple à utiliser  
- Il fournit automatique un en-tête complet très utile au débogage  
- L'horadatage est automatique (utile pour des mesures de performances)  

## logr (1/N)

Avec {logr}, il y a besoin de seulement 3 étapes pour créer un fichier de log :
  
- Ouvrir le fichier de log (avec `log_open()`)  
    - Syntaxe : `log_open(chemin_vers_fichier_log)`  
  
- Ecrire dans le fichier de log (avec `log_print()`)  
    - Syntaxe : `log_print("message à écrire dans la log")`  
  
- Fermer le fichier de log (avec `log_close()`)  
    - Syntaxe : `log_close()`  

## logr (2/N)

Un exemple :  

```{.r}


```

voir /var/data/nfs/CERISE/04-Espace-Echanges/Ordonnancement/requetes_bdni/BDNI_effectifs_bovins.R